# Generated by Django 5.1.7 on 2025-03-12 13:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('companies', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, unique=True, verbose_name='Para Birimi Kodu')),
                ('name', models.CharField(max_length=50, verbose_name='Para Birimi Adı')),
                ('symbol', models.CharField(max_length=5, verbose_name='Sembol')),
            ],
            options={
                'verbose_name': 'Para Birimi',
                'verbose_name_plural': 'Para Birimleri',
            },
        ),
        migrations.AlterModelOptions(
            name='branch',
            options={'ordering': ['company', 'name'], 'verbose_name': 'Şube', 'verbose_name_plural': 'Şubeler'},
        ),
        migrations.AlterUniqueTogether(
            name='branch',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='branch',
            name='status',
            field=models.CharField(choices=[('active', 'Aktif'), ('inactive', 'Pasif'), ('pending', 'Onay Bekliyor'), ('suspended', 'Askıya Alındı')], default='active', max_length=20, verbose_name='Durum'),
        ),
        migrations.AlterField(
            model_name='branch',
            name='address',
            field=models.TextField(verbose_name='Adres'),
        ),
        migrations.AlterField(
            model_name='branch',
            name='city',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='branches', to='companies.city', verbose_name='Şehir'),
        ),
        migrations.AlterField(
            model_name='branch',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branches', to='companies.company', verbose_name='Şirket'),
        ),
        migrations.AlterField(
            model_name='branch',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi'),
        ),
        migrations.AlterField(
            model_name='branch',
            name='district',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='branches', to='companies.district', verbose_name='İlçe'),
        ),
        migrations.AlterField(
            model_name='branch',
            name='email',
            field=models.EmailField(max_length=254, unique=True, verbose_name='E-posta'),
        ),
        migrations.AlterField(
            model_name='branch',
            name='name',
            field=models.CharField(max_length=255, verbose_name='Şube Adı'),
        ),
        migrations.AlterField(
            model_name='branch',
            name='neighborhood',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='branches', to='companies.neighborhood', verbose_name='Mahalle'),
        ),
        migrations.AlterField(
            model_name='branch',
            name='phone',
            field=models.CharField(max_length=20, verbose_name='Telefon'),
        ),
        migrations.AlterField(
            model_name='branch',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi'),
        ),
        migrations.CreateModel(
            name='APIKey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_name', models.CharField(max_length=100, verbose_name='API Anahtarı Adı')),
                ('api_key', models.CharField(max_length=64, unique=True, verbose_name='API Anahtarı')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Son Kullanma Tarihi')),
                ('last_used_at', models.DateTimeField(blank=True, null=True, verbose_name='Son Kullanım Tarihi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_keys', to='companies.company')),
            ],
            options={
                'verbose_name': 'API Anahtarı',
                'verbose_name_plural': 'API Anahtarları',
            },
        ),
        migrations.CreateModel(
            name='APIUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('endpoint', models.CharField(max_length=255, verbose_name='Endpoint')),
                ('method', models.CharField(max_length=10, verbose_name='HTTP Metodu')),
                ('status_code', models.IntegerField(verbose_name='Durum Kodu')),
                ('response_time', models.FloatField(verbose_name='Yanıt Süresi (ms)')),
                ('request_data', models.JSONField(blank=True, null=True, verbose_name='İstek Verisi')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP Adresi')),
                ('user_agent', models.TextField(verbose_name='Kullanıcı Ajanı')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('api_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usages', to='companies.apikey')),
            ],
            options={
                'verbose_name': 'API Kullanımı',
                'verbose_name_plural': 'API Kullanımları',
                'indexes': [models.Index(fields=['api_key', 'created_at'], name='companies_a_api_key_0fa831_idx'), models.Index(fields=['endpoint', 'method'], name='companies_a_endpoin_f05b77_idx')],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Oluşturma'), ('update', 'Güncelleme'), ('delete', 'Silme'), ('login', 'Giriş'), ('logout', 'Çıkış'), ('api_access', 'API Erişimi')], max_length=20, verbose_name='İşlem')),
                ('model_name', models.CharField(max_length=100, verbose_name='Model Adı')),
                ('object_id', models.CharField(max_length=36, verbose_name='Nesne ID')),
                ('object_repr', models.CharField(max_length=255, verbose_name='Nesne Gösterimi')),
                ('changes', models.JSONField(blank=True, null=True, verbose_name='Değişiklikler')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP Adresi')),
                ('user_agent', models.TextField(verbose_name='Kullanıcı Ajanı')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='companies.company')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Denetim Günlüğü',
                'verbose_name_plural': 'Denetim Günlükleri',
                'indexes': [models.Index(fields=['company', 'action', 'created_at'], name='companies_a_company_c872c3_idx'), models.Index(fields=['model_name', 'object_id'], name='companies_a_model_n_c7c73b_idx')],
            },
        ),
        migrations.CreateModel(
            name='Integration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Entegrasyon Adı')),
                ('integration_type', models.CharField(choices=[('payment', 'Ödeme Sistemi'), ('crm', 'CRM'), ('analytics', 'Analitik'), ('communication', 'İletişim'), ('storage', 'Depolama')], max_length=20, verbose_name='Entegrasyon Tipi')),
                ('provider', models.CharField(max_length=100, verbose_name='Sağlayıcı')),
                ('config', models.JSONField(default=dict, verbose_name='Yapılandırma')),
                ('status', models.CharField(choices=[('active', 'Aktif'), ('pending', 'Beklemede'), ('failed', 'Başarısız'), ('disabled', 'Devre Dışı')], default='pending', max_length=20, verbose_name='Durum')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='Hata Mesajı')),
                ('last_sync_at', models.DateTimeField(blank=True, null=True, verbose_name='Son Senkronizasyon')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='integrations', to='companies.company')),
            ],
            options={
                'verbose_name': 'Entegrasyon',
                'verbose_name_plural': 'Entegrasyonlar',
                'unique_together': {('company', 'integration_type', 'provider')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('system', 'Sistem Bildirimi'), ('payment', 'Ödeme Bildirimi'), ('usage', 'Kullanım Bildirimi'), ('security', 'Güvenlik Bildirimi')], max_length=20, verbose_name='Bildirim Tipi')),
                ('title', models.CharField(max_length=255, verbose_name='Başlık')),
                ('message', models.TextField(verbose_name='Mesaj')),
                ('priority', models.CharField(choices=[('low', 'Düşük'), ('medium', 'Orta'), ('high', 'Yüksek'), ('critical', 'Kritik')], default='medium', max_length=10, verbose_name='Öncelik')),
                ('is_read', models.BooleanField(default=False, verbose_name='Okundu mu?')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Okunma Tarihi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='companies.company')),
            ],
            options={
                'verbose_name': 'Bildirim',
                'verbose_name_plural': 'Bildirimler',
                'indexes': [models.Index(fields=['company', 'is_read', 'created_at'], name='companies_n_company_1171aa_idx')],
            },
        ),
    ]
